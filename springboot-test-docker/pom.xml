<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>springboot-test</artifactId>
        <groupId>com.hb.test</groupId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>springboot-test-docker</artifactId>
    <version>0.0.1.1</version>
    <name>springboot-test-docker</name>
    <url>http://www.example.com</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!-- docker仓库地址 -->
        <docker.repostory>development.docker.19ego.cn:5000</docker.repostory>
        <!-- 这里必须是小写的 -->
        <docker.registry.name>springboottest</docker.registry.name>
    </properties>

    <dependencies>

    </dependencies>

    <build>
        <finalName>springboottestdocker</finalName>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <outputDirectory>./target</outputDirectory>
                    <mainClass>com.hb.test.docker.DockerApplication</mainClass>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!--docker配置 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>push-image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <imageName>${docker.registry.name}/${project.name}:${project.version}</imageName>
                        </configuration>
                    </execution>
                </executions>
                <configuration>
                    <dockerHost>http://development.docker.19ego.cn:4243</dockerHost>
                    <!-- 私有仓库配置，需要settings.xml文件配合serverId对应的服务地址 -->
                    <serverId>docker-gaoyang</serverId>
                    <registryUrl>${docker.repostory}</registryUrl>
                    <!-- <forceTags>true</forceTags> -->
                    <!--install阶段也上传，否则只有deploy阶段上传-->
                    <pushImage>true</pushImage>
                    <dockerDirectory>${project.basedir}</dockerDirectory>
                    <imageName>${docker.registry.name}/${project.name}</imageName>
                    <imageTags>
                        <imageTag>${project.version}</imageTag>
                    </imageTags>
                </configuration>
            </plugin>

        </plugins>
    </build>
    <!-- 配置远程发布到私服，mvn deploy -->
    <distributionManagement>
        <repository>
            <id>releases</id>
            <name>Nexus Release Repository</name>
            <url>http://maven.19pay.com.cn:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>snapshots</id>
            <name>Nexus Snapshot Repository</name>
            <url>http://maven.19pay.com.cn:8081/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

</project>
